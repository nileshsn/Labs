SHOW DATABASES;
USE SAILOR;

CREATE TABLE SAILORS(SID INT NOT NULL, SNAME VARCHAR(25), RATING INT, AGE DECIMAL(10, 1), PRIMARY KEY(SID));
DESC SAILORS;

CREATE TABLE BOATS(BID INT NOT NULL, BNAME VARCHAR(25), COLOR VARCHAR(25), PRIMARY KEY(BID));
DESC BOATS;

CREATE TABLE RESERVES(SID INT, BID INT, DAY VARCHAR(20), FOREIGN KEY(SID) REFERENCES SAILORS(SID), FOREIGN KEY(BID) REFERENCES BOATS(BID));
DESC RESERVES;

INSERT INTO SAILORS VALUES (22, 'DUSTIN', 7, 45.0), (29, 'BRUTUS', 1, 33.0), (31, 'LUBBER', 8, 55.5), (32, 'ANDY', 8, 25.5), (58, 'RUSTY', 10, 35.0), 
(64, 'HORATIO', 7, 35.0), (71, 'ZORBA', 10, 16.0), (74, 'HORATIO', 9, 35.0), (85, 'ART', 3, 25.5), (95, 'BOB', 3, 63.5);
SELECT * FROM SAILORS;

INSERT INTO BOATS VALUES (101, 'INTERLAKE', 'BLUE'), (102, 'INTERLAKE', 'RED'), (103, 'CLIPPER', 'GREEN'), (104, 'MARINE', 'RED');
SELECT * FROM BOATS;

INSERT INTO RESERVES VALUES (22, 101, '10-10-1998'), (22, 102, '10-10-1998'), (22, 103, '10-08-1998'), (22, 104, '10-07-1998'), (31, 102, '11-10-1998'), 
(31, 103, '11-06-1998'), (31, 104, '11-12-1998'), (64, 101, '09-05-1998'), (64, 102, '09-08-1998'), (74, 103, '09-08-1998');
SELECT * FROM RESERVES;

/*1) Find the names of sailors who have reserved a red boat. */
SELECT S.SNAME FROM SAILORS S, RESERVES R, BOATS B WHERE S.SID = R.SID AND R.BID = B.BID AND B.COLOR = 'RED' GROUP BY S.SID;
SELECT SNAME FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID JOIN BOATS B ON B.BID = R.BID WHERE B.COLOR = 'RED' GROUP BY S.SID;
SELECT SNAME FROM SAILORS WHERE SID IN(SELECT SID FROM RESERVES WHERE BID IN(SELECT BID FROM BOATS WHERE COLOR = 'RED'));

/*2) Find the names of the Sailors who have reserved at least one boat. */
SELECT S.SNAME FROM SAILORS S, RESERVES R WHERE S.SID = R.SID GROUP BY S.SID;
SELECT SNAME FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID GROUP BY S.SID;
SELECT SNAME FROM SAILORS WHERE SID IN(SELECT SID FROM RESERVES) GROUP BY SID;

/*4) Find the ages of sailors whose name begins and ends with B and has at least 3 characters. */
SELECT S.AGE FROM SAILORS S WHERE S.SNAME LIKE 'B_%B';
SELECT AGE FROM SAILORS WHERE SNAME LIKE 'B_%B';

/*5) Find the names of sailors who have reserved a red and a green boat. */
SELECT S.SNAME FROM SAILORS S,  RESERVES R, BOATS B WHERE S.SID = R.SID AND R.BID = B.BID AND B.COLOR = 'RED' UNION SELECT S.SNAME FROM SAILORS S,  RESERVES R, BOATS B WHERE S.SID = R.SID AND R.BID = B.BID AND B.COLOR = 'GREEN';
SELECT S.SNAME FROM SAILORS S, RESERVES R1, RESERVES R2, BOATS B1, BOATS B2 WHERE S.SID = R1.SID AND S.SID = R2.SID AND R1.BID = B1.BID AND R2.BID = B2.BID AND B1.COLOR = 'RED' AND B2.COLOR = 'GREEN';
SELECT SNAME FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID JOIN BOATS B ON B.BID = R.BID WHERE B.COLOR IN("RED", "GREEN") GROUP BY S.SID;

/*6) Find the sids of all sailors who have reserved red boats but not green boats. */
SELECT S.SID FROM SAILORS S, RESERVES R1, RESERVES R2, BOATS B1, BOATS B2 WHERE S.SID = R1.SID AND S.SID = R2.SID AND R1.BID = B1.BID AND R2.BID = B2.BID AND B1.COLOR = 'RED' AND B2.COLOR != 'GREEN' GROUP BY S.SID;
SELECT SID FROM SAILORS WHERE SID IN (SELECT SID FROM RESERVES WHERE BID IN(SELECT BID FROM BOATS WHERE COLOR = "RED" AND COLOR != "GREEN"));

/*7) Find the sailors with the highest rating. */
SELECT SNAME FROM SAILORS WHERE RATING IN(SELECT MAX(RATING) FROM SAILORS); 

/*8) Find the name of the oldest sailor. */
SELECT SNAME FROM SAILORS WHERE AGE IN(SELECT MAX(AGE) FROM SAILORS);

/*9) Count the number of different sailor names. */
SELECT COUNT(SNAME) FROM SAILORS;

/*10) Find the no. of sailors who is eligible to vote for each rating level.*/
SELECT RATING, MIN(AGE) AS MIN_AGE FROM SAILORS WHERE AGE >= 18 GROUP BY RATING;

/*11) Find the average rating of sailors within the age group 20-35 years.*/
SELECT AVG(RATING) FROM SAILORS WHERE AGE BETWEEN 20 AND 35;

/*12) Count the number of different boats reserved.*/
SELECT COUNT(DISTINCT BID) FROM RESERVES;

/*13) Find names of sailors who are younger than the youngest with a rating of 7.*/
SELECT S.SNAME FROM SAILORS S WHERE S.AGE < (SELECT MIN(S1.AGE) FROM SAILORS S1 WHERE S1.RATING = 7);

/*14) Find the names of sailors who are older than oldest sailors with a rating of 10.*/
SELECT S.SNAME FROM SAILORS S WHERE S.AGE > (SELECT MAX(S1.AGE) FROM SAILORS S1 WHERE S1.RATING = 10);

/*15) Find sailors whose rating is better than every sailors called Horatio.*/
SELECT S.SNAME FROM SAILORS S WHERE S.RATING > ALL (SELECT S2.RATING FROM SAILORS S2 WHERE S2.SNAME = 'Horatio');

/*16) Find the age of the oldest sailors for each rating level.*/
SELECT RATING, MAX(AGE) FROM SAILORS GROUP BY RATING;

/*17) Find the names of sailors who have reserved all the boats.*/
SELECT SNAME FROM SAILORS S WHERE NOT EXISTS(SELECT BID FROM BOATS B WHERE NOT EXISTS(SELECT SID FROM RESERVES R WHERE B.BID = R.BID AND R.SID = S.SID));

/*18) Find sailors whose rating > 7 */
SELECT * FROM SAILORS WHERE RATING > 7;

/*19) Find the sailor name, boat id, reservatin date for each reservation.*/
SELECT S.SNAME, B.BID, R.DAY FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID JOIN BOATS B ON B.BID = R.BID; 
SELECT SNAME, B.BID, DAY FROM SAILORS S, BOATS B, RESERVES R WHERE B.BID = R.BID AND S.SID = R.SID;

/*20) Find the average age of sailors who are of voting age (ie atleast 18 years old) for each rating level that has atleast two such sailors*/
SELECT S.RATING, AVG(S.AGE) AS AVERAGE_AGE FROM SAILORS S WHERE S.AGE >= 18 GROUP BY S.RATING HAVING 1 < (SELECT COUNT(*) FROM SAILORS S2 WHERE S.RATING = S2.RATING);

/*21) Find the age of the youngest sailor who is eligible to vote (i.e., is at least 18 years old) for each rating level with at least two such sailors.*/
SELECT S.RATING, MIN(S.AGE) AS MIN_AGE FROM SAILORS S WHERE S.AGE >= 18 GROUP BY S.RATING HAVING COUNT(*) > 1;

/*22) Find the age of the youngest sailor for each rating level.*/
SELECT RATING, MIN(AGE) FROM SAILORS GROUP BY RATING;

/*23) Find those ratings for which the average age of sailors is the minimum over all ratings.*/
SELECT S.RATING FROM SAILORS S GROUP BY S.RATING HAVING AVG(S.AGE) = (SELECT MIN(AVG_AGE) FROM (SELECT AVG(AGE) AS AVG_AGE FROM SAILORS GROUP BY RATING) AS R);

/*24) How can retrieve the average age of sailors for each rating, sorted in descending order of average age.*/
SELECT AVG(AGE), RATING, COUNT(*) FROM SAILORS GROUP BY RATING HAVING COUNT(RATING) >= 1 ORDER BY AVG(AGE) DESC;

/*25) Find names of sailors who made atleast 3 reservations.*/
SELECT SNAME FROM SAILORS WHERE SID IN(SELECT SID FROM RESERVES GROUP BY SID HAVING COUNT(SID) >= 3);

/*26) Find the name of sailors who have reserved all boats called 'Interlake'*/
SELECT SNAME FROM SAILORS WHERE SID IN(SELECT SID FROM RESERVES WHERE BID IN(SELECT BID FROM BOATS WHERE BNAME = 'INTERLAKE'));
SELECT SNAME FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID JOIN BOATS B ON B.BID = R.BID WHERE B.BNAME = 'INTERLAKE' GROUP BY S.SID;

/*27) Write a sql query to find the names of sailors who reserved all non blue boats.*/
SELECT SNAME FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID JOIN BOATS B ON B.BID = R.BID WHERE B.COLOR != 'BLUE' GROUP BY S.SID; 

/*28) Find the sid of sailors who have not reserved boats.*/
SELECT SID, SNAME FROM SAILORS WHERE SID NOT IN(SELECT SID FROM RESERVES WHERE BID IN(SELECT BID FROM BOATS));

/*29) Find the names of sailors who have reserved boats 103 and 104*/
SELECT SNAME FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID JOIN BOATS B ON B.BID = R.BID WHERE B.BID = 103 AND 104;

/*30) Find the color of boats reserved by Dustin.*/
SELECT COLOR FROM BOATS B JOIN RESERVES R ON R.BID = B.BID JOIN SAILORS S ON S.SID = R.SID WHERE S.SNAME = 'DUSTIN'; 

/*31) Find all sids of sailors who having rating of 10 or have reserved boat 104.*/
SELECT S.SID FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID JOIN BOATS B ON B.BID = R.BID WHERE S.RATING = 10 OR R.BID = 104;

/*32) Find the color of boats reserved by lubber.*/
SELECT COLOR FROM BOATS B JOIN RESERVES R ON R.BID = B.BID JOIN SAILORS S ON S.SID = R.SID WHERE S.SNAME = 'LUBBER';

/*33) Count the number of ratings who have bid 104.*/
SELECT 	COUNT(S.RATING) FROM SAILORS S JOIN RESERVES R ON R.SID = S.SID JOIN BOATS B ON B.BID = R.BID WHERE R.BID = 104;

/*Find the bname who having bid 104*/
SELECT BNAME FROM BOATS WHERE BID = 104;



/*PRIMARY AND FOREIGN KEYS*/
USE NILESH;
CREATE TABLE GAMES(ID INT NOT NULL, NAME VARCHAR(10), GAME VARCHAR(10));
ALTER TABLE GAMES ADD CONSTRAINT PRIMARY KEY(ID);
CREATE TABLE STUDY(SID INT NOT NULL, SNAME VARCHAR(10), MARKS INT);
ALTER TABLE STUDY ADD CONSTRAINT PRIMARY KEY(SID);
CREATE TABLE WORK(ID INT, SID INT, SALARY INT);
ALTER TABLE WORK ADD CONSTRAINT FK_GAMES_ID FOREIGN KEY (ID) REFERENCES GAMES (ID), ADD CONSTRAINT FK_STUDY_SID FOREIGN KEY (SID) REFERENCES STUDY (SID);
DESC GAMES;
DESC STUDY;
DESC WORK;
